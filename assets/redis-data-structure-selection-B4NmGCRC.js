import{_ as k}from"./ValaxyMain.vue_vue_type_style_index_0_lang-CBf5hEqz.js";import{a as p,p as r,o as c,c as g,w as e,f as E,r as a,g as s,h as i}from"./app-BZDWLfP1.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-Be0Mb7hY.js";import"./YunCard.vue_vue_type_script_setup_true_lang-Dhwia5MJ.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-Bqy1HhVw.js";import"./index-C7yU5XnD.js";const u=s("h2",{id:"strings-字符串",tabindex:"-1"},[i("Strings - 字符串 "),s("a",{class:"header-anchor",href:"#strings-字符串","aria-label":'Permalink to "Strings - 字符串"'},"​")],-1),m=s("p",null,"字符串类型，Redis 最基本的数据类型，代表一个字节序列。",-1),y=s("p",null,"字节序列，多字节数据的存放顺序。存放顺序分为大端字节序（big endian）和小端字节序（little endian），举个例子，一个数值变量 x 使用两个字节存储，地址为 0x1122，那么高位字节是 0x11，低位字节是 0x22。只有读取时需要连续读取超过一个字节数据时才需要考虑字节序问题。",-1),F=s("ul",null,[s("li",null,"大端字节序是人类读数值的顺序，低位字节在后，高位字节在前。"),s("li",null,"小端字节序则相反，低位字节在前，高位字节在后。")],-1),_=s("figure",null,[s("img",{src:"https://weizicoding-1318098637.cos.ap-chengdu.myqcloud.com/%E9%80%89Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%97%B6%E7%9C%8B%E4%B8%80%E7%9C%BC.png",alt:"BIG-ENDIAN.png",loading:"lazy",decoding:"async"})],-1),b=s("h2",{id:"lists-列表",tabindex:"-1"},[i("Lists - 列表 "),s("a",{class:"header-anchor",href:"#lists-列表","aria-label":'Permalink to "Lists - 列表"'},"​")],-1),B=s("p",null,"Lists 是按插入顺序排序的字符串列表。",-1),f=s("h2",{id:"sets-集合",tabindex:"-1"},[i("Sets - 集合 "),s("a",{class:"header-anchor",href:"#sets-集合","aria-label":'Permalink to "Sets - 集合"'},"​")],-1),v=s("p",null,"Sets 是 String 类型的无序集合，它存储的集合成员具有唯一性，也就是说具有去重的特性。举个例子。",-1),C=s("ul",null,[s("li",null,"通过 Redis-Cli 操作 Redis-server，存储 user 1 喜欢的数据库")],-1),S=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SADD"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user:1:like"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," redis")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SADD"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user:1:like"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," mysql")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SADD"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user:1:like"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," mysql")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"0")])])]),s("button",{class:"collapse"})],-1),D=s("ul",null,[s("li",null,"查看 user 1 喜欢的数据库，存储了两次 mysql，但只保存了一条")],-1),x=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SMEMBERS"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user:1:like")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"mysql"')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"redis"')])])]),s("button",{class:"collapse"})],-1),A=s("p",null,"使用 sets 可以在 O(1) 时间添加、删除和测试数据是否存在。",-1),L=s("h2",{id:"hashes-哈希",tabindex:"-1"},[i("Hashes - 哈希 "),s("a",{class:"header-anchor",href:"#hashes-哈希","aria-label":'Permalink to "Hashes - 哈希"'},"​")],-1),R=s("p",null,"Hashes 是记录字段-值（key-value）的集合。Redis Hashes 类似 Go 的 map，Python 的 dictionaries，Java 的 HashMaps",-1),$=s("h2",{id:"sorted-sets-有序集合",tabindex:"-1"},[i("Sorted sets - 有序集合 "),s("a",{class:"header-anchor",href:"#sorted-sets-有序集合","aria-label":'Permalink to "Sorted sets - 有序集合"'},"​")],-1),I=s("p",null,"Sorted sets 和 Sets 与一样，是 String 类型的无序集合，它存储的集合成员具有唯一性，区别顾名思义，它是有序的，通过每个字符串的分数来维持顺序。",-1),T=s("h2",{id:"streams-流",tabindex:"-1"},[i("Streams - 流 "),s("a",{class:"header-anchor",href:"#streams-流","aria-label":'Permalink to "Streams - 流"'},"​")],-1),P=s("p",null,"Streams 的作用就像一个只附加消息的日志，Streams 按照事件发生的顺序进行记录，然后将其联合起来一起进行处理。网上大部分博客都把这个数据类型等价于实现消息队列。",-1),H=s("h2",{id:"geospatial-indexes-地理空间索引",tabindex:"-1"},[i("Geospatial indexes - 地理空间索引 "),s("a",{class:"header-anchor",href:"#geospatial-indexes-地理空间索引","aria-label":'Permalink to "Geospatial indexes - 地理空间索引"'},"​")],-1),G=s("p",null,"Geospatial indexes 的地理位置索引对于在给定的经纬度或边界内寻找位置非常有用。",-1),N=s("h2",{id:"bitmaps-位图",tabindex:"-1"},[i("Bitmaps - 位图 "),s("a",{class:"header-anchor",href:"#bitmaps-位图","aria-label":'Permalink to "Bitmaps - 位图"'},"​")],-1),w=s("p",null,"Bitmaps 是 String 类型的扩展，它把字符串当做一个位向量并允许对字符串进行位操作。位是计算机中最小的单位，使用它进行储存将非常节省空间，特别适合一些数据量大且使用二值统计的场景，例如签到。",-1),q=s("h2",{id:"bitfields-位域",tabindex:"-1"},[i("Bitfields - 位域 "),s("a",{class:"header-anchor",href:"#bitfields-位域","aria-label":'Permalink to "Bitfields - 位域"'},"​")],-1),M=s("p",null,"Bitfields 可以获取、增加、更新任何比特长度的整数值。Bitfields 支持原子读、写和增量操作，它是管理计数器的好选择。假如你开发了一款游戏，想要记录被杀的怪物数量和玩家的金币数量，你的游戏非常火爆，这两个计数器至少需要 32 位宽。此时我们可以用每个玩家的 Bitfields 来表示这些计数器。",-1),Z=s("ul",null,[s("li",null,"新玩家默认有 1000 金币，计数器偏移量为 0")],-1),j=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BITFIELD player:1:stats SET u32 "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#0 1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 0")])])]),s("button",{class:"collapse"})],-1),z=s("ul",null,[s("li",null,"杀死囚禁茜灵的反派后，获得 50 金币，并更新被杀的怪物数量的计数器，即偏移 1。")],-1),O=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BITFIELD player:1:stats INCRBY u32 "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#0 50 INCRBY u32 #1 1")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 1050")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 1")])])]),s("button",{class:"collapse"})],-1),V=s("p",null,"谁是茜灵？她！这是我们公司游戏的女主角",-1),Y=s("figure",null,[s("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/592f0982a2a74b5e8d6b45f69f35f8ca~tplv-k3u1fbpfcp-watermark.image?",alt:"临界指令-茜灵",loading:"lazy",decoding:"async"})],-1),J=s("ul",null,[s("li",null,"付给铁匠 999 金币，购买一件治安臂装")],-1),U=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BITFIELD player:1:stats INCRBY u32 "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#0 -999")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 51")])])]),s("button",{class:"collapse"})],-1),K=s("ul",null,[s("li",null,"查看玩家的数据")],-1),Q=s("div",{class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BITFIELD player:1:stats GET u32 "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#0 GET u32 #1")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 51")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"integer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") 1")])])]),s("button",{class:"collapse"})],-1),W=s("h2",{id:"hyperloglog",tabindex:"-1"},[i("HyperLogLog - ??? "),s("a",{class:"header-anchor",href:"#hyperloglog","aria-label":'Permalink to "HyperLogLog - ???"'},"​")],-1),X=s("p",null,"HyperLogLog 是一种基数估计的概率数据结构，以几乎完美的准确性换取高效的空间利用。比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}， 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。",-1),os={__name:"redis-data-structure-selection",setup(ss,{expose:o}){const l=JSON.parse('{"title":"不同业务场景下，Redis数据结构选型","description":"","frontmatter":{"title":"不同业务场景下，Redis数据结构选型","date":"2023-02-03T00:00:00.000Z","updated":"2023-02-03T00:00:00.000Z","categories":"数据库","tags":["Redis"]},"headers":[{"level":2,"title":"Strings - 字符串","slug":"strings-字符串","link":"#strings-字符串","children":[]},{"level":2,"title":"Lists - 列表","slug":"lists-列表","link":"#lists-列表","children":[]},{"level":2,"title":"Sets - 集合","slug":"sets-集合","link":"#sets-集合","children":[]},{"level":2,"title":"Hashes - 哈希","slug":"hashes-哈希","link":"#hashes-哈希","children":[]},{"level":2,"title":"Sorted sets - 有序集合","slug":"sorted-sets-有序集合","link":"#sorted-sets-有序集合","children":[]},{"level":2,"title":"Streams - 流","slug":"streams-流","link":"#streams-流","children":[]},{"level":2,"title":"Geospatial indexes - 地理空间索引","slug":"geospatial-indexes-地理空间索引","link":"#geospatial-indexes-地理空间索引","children":[]},{"level":2,"title":"Bitmaps - 位图","slug":"bitmaps-位图","link":"#bitmaps-位图","children":[]},{"level":2,"title":"Bitfields - 位域","slug":"bitfields-位域","link":"#bitfields-位域","children":[]},{"level":2,"title":"HyperLogLog - ???","slug":"hyperloglog","link":"#hyperloglog","children":[]}],"relativePath":"pages/posts/redis-data-structure-selection.md","path":"/home/runner/work/guowei-gong.github.io/guowei-gong.github.io/pages/posts/redis-data-structure-selection.md","lastUpdated":1718246058000}'),h=p(),n=l.frontmatter||{};return h.meta.frontmatter=Object.assign(h.meta.frontmatter||{},l.frontmatter||{}),r("pageData",l),r("valaxy:frontmatter",n),globalThis.$frontmatter=n,o({frontmatter:{title:"不同业务场景下，Redis数据结构选型",date:"2023-02-03T00:00:00.000Z",updated:"2023-02-03T00:00:00.000Z",categories:"数据库",tags:["Redis"]}}),(t,es)=>{const d=k;return c(),g(d,{frontmatter:E(n)},{"main-content-md":e(()=>[u,m,y,F,_,b,B,f,v,C,S,D,x,A,L,R,$,I,T,P,H,G,N,w,q,M,Z,j,z,O,V,Y,J,U,K,Q,W,X]),"main-header":e(()=>[a(t.$slots,"main-header")]),"main-header-after":e(()=>[a(t.$slots,"main-header-after")]),"main-nav":e(()=>[a(t.$slots,"main-nav")]),"main-content":e(()=>[a(t.$slots,"main-content")]),"main-content-after":e(()=>[a(t.$slots,"main-content-after")]),"main-nav-before":e(()=>[a(t.$slots,"main-nav-before")]),"main-nav-after":e(()=>[a(t.$slots,"main-nav-after")]),comment:e(()=>[a(t.$slots,"comment")]),footer:e(()=>[a(t.$slots,"footer")]),aside:e(()=>[a(t.$slots,"aside")]),"aside-custom":e(()=>[a(t.$slots,"aside-custom")]),default:e(()=>[a(t.$slots,"default")]),_:3},8,["frontmatter"])}}};export{os as default};
